USE TSQL;
GO

--CREATE VIEW Production.CategorizedProducts AS
--	SELECT
--			Production.Categories.categoryid AS CatID,
--			Production.Categories.categoryname AS CatName,
--			Production.Products.productname AS ProdName,
--			Production.Products.unitprice AS UnitPrice
--	FROM
--			Production.Categories
--			INNER JOIN Production.Products ON Production.Categories.categoryid = Production.Products.categoryid;
--GO

--CREATE VIEW Sales.CategoryQtyYear AS
--SELECT
--	c.categoryname AS Category,
--	SUM(od.qty) AS Qty,
--	YEAR(o.orderdate) AS OrderYear
--FROM
--	Production.Categories AS c
--	INNER JOIN Production.Products AS p ON c.categoryid = p.categoryid
--	INNER JOIN Sales.OrderDetails AS od ON p.productid = od.productid
--	INNER JOIN Sales.Orders AS o ON od.orderid = o.orderid
--GROUP BY 
--	c.categoryname, YEAR(o.orderdate);
--GO

--SELECT 
--	CatID, CatName, ProdName, UnitPrice,
--	RANK() OVER(ORDER BY UnitPrice DESC) AS PriceRank
--FROM
--	Production.CategorizedProducts
--ORDER BY 
--	PriceRank;
--GO

--SELECT
--	CatID, CatName, ProdName, UnitPrice,
--	RANK() OVER(PARTITION BY CatID ORDER BY UnitPrice DESC) AS PriceRank
--FROM
--	Production.CategorizedProducts
--ORDER BY
--	CatID;
--GO

--SELECT * FROM sys.views WHERE name = 'CategoryQtyYear';
--GO

--SELECT
--	Category, Qty, OrderYear,
--	SUM(Qty) OVER (
--		PARTITION BY Category
--		ORDER BY OrderYear
--		) AS RunningQty
--FROM
--	Sales.CategoryQtyYear;
-- GO

--SELECT
--	Category, Qty, OrderYear,
--	SUM(Qty) OVER (
--		PARTITION BY OrderYear
--		ORDER BY Category
--		) AS RunningQty
--FROM
--	Sales.CategoryQtyYear;
--GO

--SELECT
--	Category, Qty, OrderYear,
--	SUM(Qty) OVER (PARTITION BY OrderYear ORDER BY Category ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS RunningTotalByYear,
--	SUM(Qty) OVER (PARTITION BY Category ORDER BY Category ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS RunningTotalByCategory
--FROM
--	Sales.CategoryQtyYear
--ORDER BY
--	Orderyear, Category;
--GO

--IF OBJECT_ID('Production.CategorizedProducts', 'V') IS NOT NULL DROP VIEW Production.CategorizedProducts
--IF OBJECT_ID('Sales.CategoryQtyYear', 'V') IS NOT NULL DROP VIEW Sales.CategoryQtyYear
--GO
